  await setDoc(doc(db, "users", user.uid), {
          firstName: fname,
          lastName: lname,
        });
        user.updateProfile({ displayName: fname + " " + lname });
        setEmail("");
        setPassword("");
        setFname("");
        setLname("");
        alert("User registered successfully");








////carousell arrow settings

        prevArrow={({ handlePrev }) => (
          <IconButton
            variant="text"
            color="white"
            size="lg"
            onClick={handlePrev}
            className="!absolute hidden lg:inline-block hover:bg-gray-100 bg-white rounded-full text-[#6C7275] top-2/4 left-4 -translate-y-2/4"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={2}
              stroke="currentColor"
              className="h-6 w-6"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"
              />
            </svg>
          </IconButton>
        )}
        nextArrow={({ handleNext }) => (
          <IconButton
            variant="text"
            color="white"
            size="lg"
            onClick={handleNext}
            className="!absolute hidden lg:inline-block hover:bg-gray-100 bg-white rounded-full text-[#6C7275]  top-2/4 !right-4 -translate-y-2/4"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={2}
              stroke="currentColor"
              className="h-6 w-6"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
              />
            </svg>
          </IconButton>
        )}



           import { useGSAP } from "@gsap/react";
    import { useRef } from "react";
    import { ScrollTrigger } from "gsap/all";
    gsap.registerPlugin(ScrollTrigger);
  const CardRef = useRef();

  useGSAP(
    () => {
        
      gsap.to(".box", {
        rotation: 100,
        backgroundColor: "red",
        // delay: 1.5,
        // yoyo: true,
        // repeat: -1,
        x: 250,
        scale: 1.5,
        ease: "power1.inOut",
        borderRadius: 100,
        scrollTrigger: {
          trigger: ".box",
          start: "90% bottom ",
          end: "80% 70%",
        },
      });
    },
    { scope: CardRef }
  );

<Button
                href={step.cta.href}
                className="bg-gradient-to-br from-green-900 to-light-green-900 px-0 text-white rounded w-full"
              >
              </Button>


                 <form onSubmit={handleSignup}>
        <ToastContainer />
        <h3>Sign up</h3>
        <div className="mb-3">
          <label>First Name</label>
          <input
            type="text"
            placeholder="Enter first name"
            value={fullName}
            onChange={(e) => setFullName(e.target.value)}
          />
        </div>
  
        <div className="mb-3">
          <label>Email Address</label>
          <input
            type="email"
            placeholder="Enter email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
        </div>
        <div className="mb-3">
          <label>Password</label>
          <input
            type="password"
            placeholder="Enter password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
        </div>
        <div className="mb-3">
          <button type="submit">Sign up</button>
        </div>
      </form>


      ////// Nav tabb

         <div className=" w-[99.5%] sticky top-0 z-50 rounded-b-md  bg-gradient-to-tr from-green-700 to-green-900 shadow-md text-white px-3 items-center justify-between flex flex-row-reverse py-3 lg:py-2 cursor-pointer ">
        <h1
          onClick={handleBackHome}
          className="lg:text-2xl text-base font-semibold flex pop items-center"
        >
          <img src="images/FoodBank.png" className=" w-5 lg:w-8 " />
          FoodConnect
        </h1>{" "}
        <p
          className="flex  font-medium p-0 leading-none pop gap-1"
          onClick={handleBackHome}
        >
          <ImHome />
          Home
        </p>
      </div>



    // "build": "npm install --legacy-peer-deps && vercel build",
